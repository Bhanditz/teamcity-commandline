CommandRunner.businesslogic.error.pattern=Critical error has been encountered: {0}
CommandRunner.connecting.step.name=Connecting to "{0}" TeamCity Server
CommandRunner.could.not.connect.error.pattern=Could not connect to server: {0}
CommandRunner.global.runtime.param.host=--host
CommandRunner.global.runtime.param.password=--password
CommandRunner.global.runtime.param.user=--user
CommandRunner.incompatible.plugin.error.message.pattern=Failed to perform operation, most likely due to incompatible protocol changes. \
Server version is "%s" but Command Line Remote Run version is "%s". Please use version of Command Line Remote Run matching Server version.
CommandRunner.invalid.command.arguments.error.pattern=Invalid parameter(s): {0}
CommandRunner.invalid.credential.error.pattern=Invalid username or password
CommandRunner.invalid.url.error.pattern=Invalid URL: {0}
CommandRunner.logging.step.name=Logging in
CommandRunner.monitor.error.found=%s: error
CommandRunner.no.default.host.error.pattern=No Default host and no host specified. Use "{0} [url]"
CommandRunner.not.logged.in.error.pattern=You are not logged in to "{0}". Please run "login" command or specify "--user" & "--password"
CommandRunner.unknown.host.error.pattern=Unknown host: {0}
Help.available.commands.list.header=Available commands:\n
Help.available.commands.list.pattern=\t{0}\t\t{1}\n
Help.command.description=Display this help (use 'help run' to get help on 'run' command parameters)
Help.command.header=TeamCity Commandline utility v{0} (build {1}) Copyright 2000-2015 JetBrains s.r.o.\n
Help.command.id=help
Help.command.usage.text=\nUse help <command> for help on specified command usage.\n\n
Help.global.options.header=Global options:\
\n\t{0} <server URL>\t\tspecify URL of TeamCity server (the one used to access web UI)\
\n\t{1} <username>\t\tspecify TeamCity username to use during operations\
\n\t{2} <password>\tspecify a password for the user denoted by '--user' option\
\n\nDebug options:\
\n\t{3} \t\t\t\tenables debug mode (debug info will be printed to stderr)\
\n\t{4} \tdisables deletion of patch file\
\n\
\nSee also: https://confluence.jetbrains.com/display/TW/Command+Line+Remote+Run+Tool
Help.no.one.registered.command.found.message=Unknown "{0}" command\n\n
Help.tool.usage.description=Usage: java -jar tcc.jar <command> [<options>]\n
List.command.id=info
List.conf.runtime.param=-c
List.conf.runtime.param.long=--configurations
List.config.list.header=id\tproject\tname\tstatus\tdescription
List.config.list.pattern={0}\t{1}\t{2}\t{3}\t{4}
List.configurations.section.header=\nConfigurations:\n
List.empty.description=<empty>
List.help.description=List TeamCity projects or build configurations
List.help.usage.pattern={0}\
\nusage: {1} [{2}|{3} [{2} <prjId>]|{4} [{3} <cfgId>]]\
\n\nWith no args, print all information of the target TeamCity Server.\
\nSetting additional arguments ({2} <prjId> for {3} and {3} <cfgId> for {4} allows filtering by Project and Configuration respectively).\
\n\nValid options:\
\n\t{5}[{6}] \t\t display Projects\
\n\t{7}[{8}] \t display Configurations\n\n
Args.debug.switch.name=-debug
Args.silent.switch.name=-silent
Args.do.not.delete.file.after.run.switch.name=-debug-clean-off
List.no.config.found.for.filter.message=No "{0}" Configuration found
List.project.list.header=id\tname\tstatus\tdescription
List.project.list.pattern={0}\t{1}\t{2}\t{3}
List.project.runtime.param=-p
List.project.runtime.param.long=--projects
List.projects.section.header=\nProjects:\n
Login.command.id=login
Login.help.description=Remember TeamCity Server credentials for other commands
Login.help.usage.pattern={0}\
\nusage: {1} {2} <server URL> [{3} <username> [{4} <password>]]\
\n\nIf username and password are not specified, will prompt for them interactively\
\nThe last <url> used in login command is treated as default and will be used if "--host" option is omitted.\n\n
Login.password.prompt=enter password:
Login.result.ok.pattern=Login successful. The subsequent commands will be performed with user "{0}" authentication. Use "logout" command to remove authentication.
Login.username.prompt=enter username:
Logout.command.id=logout
Logout.help.description=Clear authentication information previously saved with "login" command
Logout.help.usage.pattern={0}\nusage: {1} {2} <server URL>\n\n
Logout.result.ok.pattern=Credentials for "{0}" removed successfully
RemoteRun.build.failed.error.pattern=Remote Run failed: build status={0}
RemoteRun.build.ok.commit.rejected.error.pattern=build is OK, but commit is not allowed: {0}
RemoteRun.build.result.ok.pattern=Build for Change \#{0} run successfully
RemoteRun.collect.changes.step.name=Collecting changes
RemoteRun.collect.changes.step.result.pattern=Collected {0} files for Remote Run
RemoteRun.collected.configuration.done.pattern={0} collected: {1}
RemoteRun.command.id=run
RemoteRun.config.runtime.param=-c
RemoteRun.config.runtime.param.long=--configuration
RemoteRun.project.runtime.param=-p
RemoteRun.project.runtime.param.long=--project
RemoteRun.help.description=Start personal build
RemoteRun.help.usage.pattern=%s\
\nusage: %s <option> [<option>...] FILE [FILE...]|@FILELIST\
\n\nStarts Remote Run for the files specified by FILE arguments in TeamCity Configuration(s) specified by <cfg> argument.\
\nFILE can be a file or a directory. When directory is specified, its entire content is used (including nested).\
\nIf FILELIST is set to a file path, the file's content is interpreted as individual file names list.\
\nNOTE: a file which is specified but is not found on the filesystem will be treated as deleted for Remote Run.\
\n\nValid options:\
\n\t%s[%s] <cfgId>[,<cfg1Id>...]\ttarget TeamCity configuration id(s) for the Remote Run\
\n\t%s[%s] %s[%s] <prjId>\ttarget TeamCity project id for the Remote Run (run all configurations from the specified project)\
\n\t%s[%s] <message>\t\t\t\t\t\tusers message describes changes for Remote Run.\
\n\t%s[%s] <timeout>\t\t\t\t\t\tmax time (ms) the utility will wait for Remote Run result if -n|--nowait switch is missing\
\n\t%s <mapping_file>\t\t\t\toverrides Default TeamCity mappings.\
\n\t%s[%s]\t\t\t\t\t\t\t\tdo not wait for build result, just schedule build for execution\
\n\t%s\t\t\t\t\t\tif set, check for changes will be performed as early as possible. This will minimize number of changes included into the build.\
\n\t%s\t\t\t\t\tcheck that target configurations are compatible with the provided files, and run build(s) only on compatible configuration(s)\
\n\t%s\t\t\t\t\t\tforce clean checkout for the remote run\
\n\n
RemoteRun.mapping.step.done.message=%d of %d file(s) have been mapped
RemoteRun.mapping.step.name=Mapping local files to TeamCity
RemoteRun.message.runtime.param=-m
RemoteRun.message.runtime.param.long=--message
RemoteRun.missing.message.para.error.pattern=missing {0}[{1}]
RemoteRun.no.files.collected.for.remoterun.error.message=No files collected for Remote Run.
RemoteRun.no.one.mappings.found.error.message=No one of %d file(s) has been mapped to TeamCity.\nPerhaps resources collected for Remote Run are not covered by TeamCity mappings. Check your '.teamcity-mappings.properties' file(s).
RemoteRun.nowait.runtime.param=-n
RemoteRun.nowait.runtime.param.long=--nowait
RemoteRun.checkforchangesearly.runtime.param.long=--check-changes-early
RemoteRun.force.compatibility.check.runtime.param.long=--force-compatibility-check
RemoteRun.force.clean.param.long=--force-clean-checkout
RemoteRun.overriding.config.file.argument=--config-file
RemoteRun.preparing.patch.step.name=Preparing patch
RemoteRun.schedule.result.ok.pattern=Build for Change \#{0} scheduled successfully
RemoteRun.scheduling.build.step.name=Scheduling personal build
RemoteRun.send.patch.step.name=Sending patch to TeamCity Server
RemoteRun.timeout.runtime.param=-t
RemoteRun.timeout.runtime.param.long=--timeout
RemoteRun.UserChangeStatus.CANCELED=Build was canceled
RemoteRun.UserChangeStatus.CHECKED=Build was successful
RemoteRun.UserChangeStatus.FAILED=Build failed
RemoteRun.UserChangeStatus.FAILED_WITH_RESPONSIBLE=Build failed, investigation assigned
RemoteRun.UserChangeStatus.PENDING=Pending
RemoteRun.UserChangeStatus.RUNNING_FAILED=Failing
RemoteRun.UserChangeStatus.RUNNING_SUCCESSFULLY=Running
RemoteRun.wait.for.build.statuschanged.step.name={0}
RemoteRun.wait.for.build.step.name=Waiting for Remote Run to finish
RemoteRun.wait.for.build.timeout.exceed.error=Stopped waiting for Remote Run \#{1}, timeout exceeded: {0}ms
