CommandRunner.businesslogic.error.pattern=Critical error has been encountered: {0}
CommandRunner.connecting.step.name=Connecting to "{0}" TeamCity Server
CommandRunner.could.not.connect.error.pattern=Could not connect to server: {0}
CommandRunner.global.runtime.param.host=--host
CommandRunner.global.runtime.param.password=--password
CommandRunner.global.runtime.param.user=--user
CommandRunner.invalid.command.arguments.error.pattern=Invalid parameter(s): {0}
CommandRunner.invalid.credential.error.pattern=Invalid username or password
CommandRunner.invalid.url.error.pattern=Invalid URL: {0}
CommandRunner.logging.step.name=Logging in
CommandRunner.monitor.error.found=error
CommandRunner.no.default.host.error.pattern=No Default host and no host specified. Use "{0} [url]"
CommandRunner.not.logged.in.error.pattern=You are currently not logged in to "{0}". Run "login" command or specify "--user" & "--password"
CommandRunner.unknown.host.error.pattern=Unknown host: {0}
Help.available.commands.list.header=Available commands:\n
Help.available.commands.list.pattern=\t{0}\t\t{1}\n
Help.command.description=Display this help
Help.command.header=TeamCity Commandline utility v{0} (build {1}) Copyright 2000-2009 JetBrains s.r.o.\n
Help.command.id=help
Help.command.usage.text=\nUse help <command> for help on specified command usage.\n\n
Help.global.options.header=Global options:\
\n\t{0} <server URL>\tspecify URL of TeamCity server (the one used to access web UI)\
\n\t{1} <username>\tspecify TeamCity username to use during operations\
\n\t{2} <password>\tspecify a password for the user denoted by '--user' option\
\n\nDebug options:\
\n\t{3} \t\t\tswitch on Debug mode (all Debug info will be printed to stderr)\
\n\t{4} \tturn off the Patch file deletion\
\n\
\nSee also: http://svn.jetbrains.org/teamcity/plugins/commandline/trunk/command.line/HOWTO
Help.no.one.registered.command.found.message=Unknown "{0}" command\n\n
Help.tool.usage.description=Usage: java -jar tcc.jar <command> [<options>]\n
List.command.id=info
List.conf.runtime.param=-c
List.conf.runtime.param.long=--configurations
List.config.list.header=id\tproject\tname\tstatus\tdescription
List.config.list.pattern={0}\t{1}\t{2}\t{3}\t{4}
List.configurations.section.header=\nConfigurations:\n
List.empty.description=<empty>
List.help.description=List TeamCity projects, build configurations or VCS roots
List.help.usage.pattern={0}\
\nusage: {1} [{2}|{3} [{2} <prjId>]|{4} [{3} <cfgId>]]\
\n\nWith no args, print all information of the target TeamCity Server.\nSetting additional arguments ({2} <prjId> for {3} and {3} <cfgId> for {4} allows filtering by Project and Configuration respectively).\n\n
\n\nValid options:\
\n\t{5}[{6}] \t\t display Projects\
\n\t{7}[{8}] \t display Configurations\
\n\t{9}[{10}] \t\t display VCS roots\n
Args.debug.switch.name=-debug
Args.do.not.delete.file.after.run.switch.name=-debug-clean-off
List.no.config.found.for.filter.message=No "{0}" Configuration found
List.project.list.header=id\tname\tstatus\tdescription
List.project.list.pattern={0}\t{1}\t{2}\t{3}
List.project.runtime.param=-p
List.project.runtime.param.long=--projects
List.projects.section.header=\nProjects:\n
List.vcsroot.runtime.param=-v
List.vcsroot.runtime.param.long=--vcsroots
List.vcsroots.list.header=id\tprojects\tconfigurations\tname\tvcsname\tproperties
List.vcsroots.list.pattern={0}\t{1}\t{2}\t{3}\t{4}\t{5}
List.vcsroots.section.header=\nVCS roots:\n
Login.command.id=login
Login.help.description=Remember TeamCity Server credentials using suplied username and password for other commands
Login.help.usage.pattern={0}\
\nusage: {1} {2} <server URL> [{3} <username> [{4} <password>]]\
\n\nWith no username or password args, prompt for input username and password interactive\n\n
Login.password.prompt=enter password:
Login.result.ok.pattern=Login successful. all following commands will be performed with user "{0}" authentication. Use "logout" command to remove authentication.
Login.username.prompt=enter username:
Logout.command.id=logout
Logout.help.description=Clear authentication information previously saved with "login" command
Logout.help.usage.pattern={0}\nusage: {1} {2} <server URL>\n\n
Logout.result.ok.pattern=Credential for "{0}" removed successfully
RemoteRun.build.failed.error.pattern=RemoteRun failed: build status={0}
RemoteRun.build.ok.commit.rejected.error.pattern=build is OK, but commit is not allowed: {0}
RemoteRun.build.result.ok.pattern=Build for Change \#{0} ran successfully
RemoteRun.collect.changes.step.name=Collecting changes
RemoteRun.collect.changes.step.result.pattern=Collected {0} files for Remote Run
RemoteRun.collected.configuration.done.pattern={0} collected: {1}
RemoteRun.command.id=run
RemoteRun.config.runtime.param=-c
RemoteRun.config.runtime.param.long=--configuration
RemoteRun.configuration.omitted.with.unshared.folder.error.pattern=Cannot start RemoteRun has omitted <cfg> with unshared folder. See "{0}" command.
RemoteRun.help.description=Start personal build
RemoteRun.help.usage.pattern={0}\
\nusage: {1} {2}[{3}] <cfg> {4}[{5}] <message> [{6}[{7}] <timeout>] [{8}[{9}]] FILE[FILE...]|@FILELIST\
\n\nRuns RemoteRun for TeamCity Configuration set with <cfg> argument and resources passed by FILE's section.\
\nIf filename's starting with "@" the file content is interpreted as list of resources for RemoteRun.\
\nNOTE: a file which is not found in local filesystem will be treated as deleted for RemoteRun.\
\n\nValid options:\
\n\t{10}[{11}] <cfg>\t target TeamCity configuration id for the RemoteRun\
\n\t{12}[{13}] <message>\t\t users message describes changes for RemoteRun.\
\n\t{14}[{15}] <timeout>\t\t max time the utility will wait for RemoteRun result if -n|--nowait switch is missing\
\n\t{16}[{17}]\t\t\t do not wait for build result, just schedule build for execution\n\n
RemoteRun.message.runtime.param=-m
RemoteRun.message.runtime.param.long=--message
RemoteRun.missing.message.para.error.pattern=missing {0}[{1}]
RemoteRun.no.default.vcsroot.error.pattern=Could not get Default VcsRoot in Configuration "{0}". Only single VcsRoot can be accepted as Default but the Configuration has {1} VcsRoots. Use "share" command for processing Configurations which contains several VcsRoots. 
RemoteRun.no.files.collected.for.remoterun.eror.message=No files collected for Remote Run.
RemoteRun.no.one.file.added.to.patch.error.message=No one of %s file(s) added to RemoteRun
RemoteRun.no.shares.for.remoterun.error.message=No one local folder shared with TeamCity. Use 'share' command for Share creation.
RemoteRun.noshares.runtime.param.long=--not-use-shares
RemoteRun.nowait.runtime.param=-n
RemoteRun.nowait.runtime.param.long=--nowait
RemoteRun.overriding.config.file.argument=--config-file
RemoteRun.passed.path.is.not.shared.error.message=Path is not shared: {0}
RemoteRun.preparing.patch..step.name=Preparing patch
RemoteRun.schedule.result.ok.pattern=Build for Change \#{0} scheduled successfully
RemoteRun.scheduling.build.step.name=Scheduling Personal Build
RemoteRun.send.patch.step.name=Sending the patch to TeamCity Server
RemoteRun.timeout.runtime.param=-t
RemoteRun.timeout.runtime.param.long=--timeout
RemoteRun.UserChangeStatus.CANCELED=Build was canceled
RemoteRun.UserChangeStatus.CHECKED=Build was successful
RemoteRun.UserChangeStatus.FAILED=Build failed
RemoteRun.UserChangeStatus.FAILED_WITH_RESPONSIBLE=Build failed with Responce
RemoteRun.UserChangeStatus.PENDING=Pending
RemoteRun.UserChangeStatus.RUNNING_FAILED=Failing
RemoteRun.UserChangeStatus.RUNNING_SUCCESSFULY=Running
RemoteRun.wait.for.build.statuschanged.step.name={0}
RemoteRun.wait.for.build.step.name=Waiting for Personal Build
RemoteRun.wait.for.build.timeout.exceed.error=Waiting for RemoteRun for Change \#{1} canceled: timeout {0} ms exceed
RemoteRun.wrong.configuration.id.error.pattern=Could not find Configuration "{0}"
Share.command.id=share
Share.custom.mapping.do.not.set.default.row.pattern=[{0}]\tDO NOT SET DEFAULT MAPPING
Share.custom.mapping.empty.row=\t
Share.custom.mapping.row.pattern=[{0}]\t{1}
Share.defauilt.mapping.prompt=enter your choice:
Share.default.mapping.message=\nThere were several Clients Mapping found.\
\nYou can choose Default mapping which will be used as Root repository location for local resources over RemoteRun.\n
Share.help.description=Associate local folder with TeamCity VCS root
Share.help.usage.pattern={0}\
\nusage: [{1} {2}[{3}] <vcsroot> [{4}[{5}] <path>]] | [{6}[{7}]] | [{14}[{15}]]\
\n\nCreate mapping of local folder to existing TeamCity VcsRoot or show existing shares. If local path's omitted the current directory is shared\
\nNOTE: As far the tool caches some information during sharing your local cache became out-of-date next to changing of related VcsRoot on TC Server.\
\nUse "--sync" for update caches\
\n\nValid options:\
\n\t{8}[{9}] <vcsroot>\t target TeamCity VcsRoot id. Can be found using by "info" command\
\n\t{10}[{11}] <path>\t absolute path to existing local folder will be shared with TeamCity VcsRoot\
\n\t{12}[{13}]\t\t show existing shares\
\n\t{14}[{15}]\t\t update cached info\n\n
Share.info.runtime.param=-i
Share.info.runtime.param.long=--info
Share.local.runtime.param=-l
Share.local.runtime.param.long=--local
Share.no.one.share.info.message=no one share found
Share.result.ok.pattern=New Share \#{0} from local path "{1}" to VcsRoot \#{2} was created
Share.shares.list.header=id\tlocal\tvcsrootid\tproperties\tdefault mapping
Share.shares.list.pattern={0}\t{1}\t{2}\t{3}\t{4}
Share.sync.runtime.param=-s
Share.sync.runtime.param.long=--sync
Share.update.info.pattern={0} shared updated, {1} deleted
Share.update.nothing.to.update.message=Nothing to update
Share.vcsroot.not.found.for.sharing.error.message=no VcsRoot found. id={0}
Share.vcsroot.not.integer.error.message=wrong Id format: {0}
Share.vcsroot.runtime.param=-v
Share.vcsroot.runtime.param.long=--vcsroot
Unshare.command.id=unshare
Unshare.help.description=Remove association of local folder with TeamCity VCS root
Unshare.help.usage.pattern={0}\
\nusage: {1} <shareId>\n\n
Unshare.result.ok.pattern=Share "{0}" removed successfully
Unshare.share.runtime.param=-s
Unshare.share.runtime.param.long=--share
