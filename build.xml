<project name="jetbrains.teamcity.plugin" basedir="." default="deploy">

  <property file="build.properties"/>

  <target name="clean">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${tool.home}/bin">
        <include name="**/**"/>
      </fileset>
    </delete>
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${tmp}">
        <include name="**/**"/>
      </fileset>
    </delete>
  </target>

  <target name="clean-dist">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${dist-commandline}">
        <include name="**/**"/>
      </fileset>
    </delete>
  </target>

  <path id="tool.classpath">
    <dirset dir="${tmp}/bin">
    </dirset>
  </path>

  <target name="compile" depends="prepare-bundle-lib">
     <echo file="${tool.home}/src/com/jetbrains/teamcity/Build.java">package com.jetbrains.teamcity;

public class Build {
    public static final String major = "${major.version}";
    public static final String build = "${build.number}";
}</echo>

    	<javac destdir="${tmp}/bin" debug="on" target="1.5">
	      	<src path="${tool.home}/src"/>
    	</javac>
    <copy todir="${tmp}/bin">
      <fileset dir="${tool.home}/src">
        <include name="**/?*.properties"/>
      </fileset>
    </copy>
    <copy todir="${tmp}/scripts">
      <fileset dir="${tool.home}/scripts">
        <include name="**/*.*"/>
      </fileset>
    </copy>

  </target>

  <target name="build" depends="compile">
  	
    <mkdir dir="${tmp}"/>
  	
    <copy file="${tool.home}/META-INF/MANIFEST.MF" tofile="${tmp}/MANIFEST.MF"/>
  	<copy file="${tool.home}/log4j.properties" tofile="${tmp}/bin/log4j.properties"/>

    <!--condition property="plugin.version" else="${major.version}.${build.number}" value="${major.version}.0">
      <equals arg1="${build.number}" arg2="SNAPSHOT"/>
    </condition-->

    <jar destfile="${tmp}/${product.name}.jar" manifest="${tmp}/MANIFEST.MF">
      <fileset dir="${tmp}/bin">
        <include name="**/**"/>
      </fileset>
      <fileset dir="${tmp}/scripts">
        <include name="**/**"/>
      </fileset>
    </jar>

  </target>

  <target name="deploy" depends="clean,build,clean-dist">
    <mkdir dir="${dist-commandline}"/>

    <!--condition property="plugin.version" else="${major.version}.${build.number}" value="${major.version}.0">
      <equals arg1="${build.number}" arg2="SNAPSHOT"/>
    </condition-->

    <copy todir="${dist-commandline}">
      <fileset dir="${tmp}">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <antcall target="clean"/>
  </target>

  <target name="dist" depends="deploy"/>
	
  <target name="test">
    <ant dir="${tests.project.path}" inheritall="yes" inheritrefs="yes" target="test"/>
  </target>
	
  <target name="prepare-bundle-lib" description="Prepares libraries used by the plugin">
  
	<mkdir dir="${tmp}/bin"/>
  	<property name="libs" location="${tmp}/bin"/>
  	<mkdir dir="${libs}"/>
  	
  	<!-- will extract all libs content for bundling -->
  	<unjar src="${idea-libs}/util.jar" dest="${libs}" overwrite="yes"/>
  	
  	<unjar src="${teamcity-eclipse-libs}/patches-impl.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-eclipse-libs}/remote-server-proxy.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-eclipse-libs}/server-model.jar"  dest="${libs}" overwrite="yes"/>
  	
	<unjar src="${teamcity-openapi-libs}/common-api.jar" dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-openapi-libs}/runtime-util.jar"  dest="${libs}" overwrite="yes"/>
  	
	<unjar src="${teamcity-thirdparty-libs}/commons-codec-1.3.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/commons-httpclient-3.1.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/commons-logging.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/log4j-1.2.12.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/xmlrpc-2.0.1.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/xpp3_min-1.1.3.4.M.jar"  dest="${libs}" overwrite="yes"/>
  	<unjar src="${teamcity-thirdparty-libs}/xstream-1.2.1.jar"  dest="${libs}" overwrite="yes"/>
  	
  </target>

</project>